# Generated by Django 4.1.7 on 2023-04-22 12:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('position', models.CharField(choices=[('officer', 'officer'), ('booking_clerk', 'booking_clerk'), ('supervisor', 'supervisor'), ('release_clerk', 'release_clerk')], max_length=25)),
                ('user_status', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('account_number', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('inmate_id', models.CharField(max_length=200)),
                ('balance', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('suffix', models.CharField(max_length=10)),
                ('relationship', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='InmateArrestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrest_timestamp', models.DateTimeField()),
                ('arresting_agency', models.CharField(max_length=100)),
                ('arresting_location', models.CharField(max_length=100)),
                ('arresting_charges', models.CharField(max_length=225)),
                ('arresting_officer_id', models.IntegerField()),
                ('searching_officer_id', models.IntegerField()),
                ('transporting_officer_id', models.IntegerField()),
                ('dept_report_number', models.IntegerField()),
                ('bail_allowance', models.BooleanField()),
                ('bail_amount', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='InmateGangs',
            fields=[
                ('gang_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('gang_area', models.CharField(max_length=50)),
                ('is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='InmateHealthSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epilepsy', models.CharField(max_length=225)),
                ('escape_risk', models.BooleanField()),
                ('head_lice', models.CharField(max_length=225)),
                ('body_lice', models.CharField(max_length=225)),
                ('heart_disease', models.CharField(max_length=225)),
                ('impaired_consciousness', models.CharField(max_length=100)),
                ('medications', models.CharField(max_length=225)),
                ('mental_disorder', models.CharField(max_length=225)),
                ('emergency_care', models.CharField(max_length=225)),
                ('suicide_risk', models.CharField(max_length=225)),
                ('uses_drugs', models.CharField(max_length=225)),
                ('uses_alcohol', models.CharField(max_length=225)),
            ],
        ),
        migrations.CreateModel(
            name='InmateProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_property', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=225)),
                ('value', models.DecimalField(decimal_places=2, max_digits=8)),
                ('location', models.CharField(max_length=50)),
                ('release_status', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='InmateTraits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=80)),
                ('middle_initial', models.CharField(blank=True, max_length=1, null=True)),
                ('last_name', models.CharField(max_length=80)),
                ('date_of_birth', models.CharField(max_length=10)),
                ('place_of_birth', models.CharField(max_length=25)),
                ('country', models.CharField(max_length=80)),
                ('nationality', models.CharField(max_length=80)),
                ('sex', models.CharField(max_length=10)),
                ('hair_color', models.CharField(max_length=20)),
                ('eye_color', models.CharField(max_length=20)),
                ('height_feet', models.PositiveIntegerField()),
                ('height_inches', models.PositiveIntegerField()),
                ('weight', models.CharField(max_length=10)),
                ('alias', models.CharField(blank=True, max_length=80, null=True)),
                ('blemishes', models.CharField(blank=True, max_length=200, null=True)),
                ('primary_add', models.CharField(max_length=200)),
                ('temp_add', models.CharField(blank=True, max_length=200, null=True)),
                ('drivers_license_num', models.CharField(max_length=80, unique=True)),
                ('drivers_license_state', models.CharField(max_length=2)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='InmateVehicles',
            fields=[
                ('license_plate_number', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('license_plate_state', models.CharField(max_length=2)),
                ('make', models.CharField(max_length=50)),
                ('color', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('place_parked', models.CharField(max_length=100)),
                ('impound_company', models.CharField(max_length=100)),
                ('impound_location', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BookingClerk',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('booking_clerk_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('officer_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseClerk',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('release_clerk_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('supervisor_id', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetails',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(max_length=2)),
                ('transaction_amount', models.FloatField()),
                ('transaction_date', models.DateTimeField()),
                ('account_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jims_app.accounts')),
            ],
        ),
        migrations.CreateModel(
            name='InmateSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrest_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatearrestinfo')),
                ('emergency_contact', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.emergencycontacts')),
                ('gang_name', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmategangs')),
                ('health_sheet', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatehealthsheet')),
                ('license_plate_number', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmatevehicles')),
                ('property', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='jims_app.inmateproperty')),
                ('traits', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jims_app.inmatetraits')),
            ],
        ),
    ]
